newWorld( "Scripts/world.gm" );


//addActor( classname, configfile, playercontrolled, camerafollow, posx, posy, debugname )

//addActor( "character", "Models/paladin/paladin.cfg", 1, 1, 3, 0, "My Player" );

//addActor( "soldier", "Scripts/soldier_dod.gm", 0, 1, -111, -110, "My Player 2" );
//addActor( "soldier", "Scripts/soldier.gm", 1, 1, 13, -15, "My Player" );
//addActor( "soldier", "Scripts/soldier.gm", 0, 0, 3, -5, "My Player" );

//addActor( "soldier", "Scripts/soldier_pilot.gm", 1, 0, 13, -15, "My Pilot" );
//addActor( "soldier", "Scripts/soldier_pilot.gm", 1, 0, 3, -5, "My Pilot 2" );


//addActor( "hydroplane", "Scripts/hydroplane.gm", 1, 0, -1, -110, "Another Hydroplane" );

//addActor( "hydroplane", "Scripts/hydroplane.gm", 1, 0, 100, 0, "Hydroplane" );

//addActor( "flag", "Scripts/flag.gm", 0, 0, -11, -17, "Flag" );

//addActor( "soldier", "Scripts/soldier_dod.gm", 1, 1, 4, -16, "My Player" );


//addActor( "scriptweapon", "Scripts/scriptweapon_planegun.gm", 1, 0, 17, -37, "My Weapon" );
addActor( "scriptweapon", "Scripts/scriptweapon_rifle.gm", 1, 0, 17, -37, "My Weapon 2" );
//addActor( "hydroplane", "Scripts/hydroplane.gm", 1, 0, -569, -59, "A Hydroplane" );
//addActor( "hydroplane", "Scripts/hydroplane2.gm", 1, 0, -569, -59, "A Hydroplane" );

/// map
//foo = Vector3(); 
//foo.x = 10;

// params that are float (like 1.0f) must always be float!

		//\param color: Color of the fog (r, g, b)
		//\param linearFog: Set this to true for linear fog, otherwise exponential fog is applied.
		//\param start: Only used in linear fog mode (linearFog=1). Specifies where fog starts.
		//\param end: Only used in linear fog mode (linearFog=1). Specifies where fog ends.
		//\param density: Only used in expotential fog mode (linearFog=0). Must be a value between 0 and 1.
		//\param pixelFog: Set this to 0 for vertex fog, and true if you want pixel fog.
		//\param rangeFog: Set this to 1 to enable range-based vertex fog. The distance
		//from the viewer is used to compute the fog, not the z-coordinate. This is
		//better, but slower. This is only available with D3D and vertex fog. 
//mapSetFog( 74, 144, 204,
//		   1, 2150.0f, 2400.0f, 0.5f, 1, 0 ); 		   

		//\param color: Color of the fog (r, g, b)
//mapSetAmbientLight( 155, 60, 60 );


		// mesh filename
		// position (float x, y, z)
		// scale (float x, y, z)
mapAddMesh( "Maps/test6.dmf", 0.0f, 0.0f, 0.0f, 
							 1.0f, -1.0f, -1.0f );
						 
							 
//addBot();	
						 
//mapAddMesh( "Maps/test.dmf", 0.0f, 0.0f, 0.0f, 
//							 0.1f, -0.1f, -0.1f );

							 
		// texture name
//mapSetSky( "Textures/sky3.jpg" );

		// position (float x, y, z)
		// size (float x, y, z)
		// type 0 - water;
//mapAddZone( 11.0f, 500.0f, 0.0f,
//			1000.0f, 1000.0f, 5000.0f,
//			0 );
			

				
		// upper back left corner of cloud box (float x, y, z)
		// lower front right corner of cloud box (float x, y, z)
		// cloud type 0-4
	
//local cloudY = -105.0f; 		
// for( i = -4; i < 4; i=i+1 ) 
// {	
// 	mapAddCloud( i*99.0f, cloudY, -90.0f,
// 				 i*99.0f + 200.0f, cloudY - 170.0f, 120.0f, 
// 				 (i+4) % 4	);
// 				
// }		
// 							
// local cloudY = -110.0f; 	
// for( i = -4; i < 4; i=i+1 )
// {	
// 	mapAddCloud( i*139.0f, cloudY, -450.0f,
// 				 i*139.0f + 260.0f, cloudY - 220.0f, -220.0f, 
// 				 abs(4-(i+4)) % 4	);
// 				
// }		
// local cloudY = -100.0f; 	
// for( i = -4; i < 4; i=i+1 )
// {	
// 	mapAddCloud( i*99.0f, cloudY, 200.0f,
// 				 i*99.0f + 200.0f, cloudY - 170.0f, 520.0f, 
// 				 abs(4-(i+4)) % 4	);
// 				
// }			

		// texture name
		// position (float x, y, z)
		// lock x position (0/1)
		// color (float r, g, b)
//mapAddSun( "Textures/flares.jpg", 80.0f, cloudY*5.85f, -3000.0f,
								  //1,
								  //1.0f, 1.0f, 1.0f );
			
								  					  

print(`Script loaded from world.gm`);

